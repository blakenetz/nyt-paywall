{
  "version": 3,
  "sources": ["../src/util.ts", "../src/index.ts"],
  "sourcesContent": ["const removableQueries = [\n\t'[role*=\"dialog\"]', // includes `alertdialog` as well\n\t\"iframe\",\n\t'[aria-live=\"assertive\"]',\n\t'[class*=\"Modal\"]',\n\t'[class*=\"modal\"]',\n\t'[class*=\"InterstitialWrapper\"]',\n\t'[class*=\"Paywall\"]',\n\t'[class*=\"PersistentBottom\"]',\n\t\"[class*=adunit]\",\n\t\"[class*=inlineoffer]\",\n];\n\n/**\n * an empty div is typically some sort of overlay\n */\nfunction removeEmptyDiv() {\n\tconsole.debug(`\uD83C\uDF73 removing empty divs`);\n\tArray.from(document.querySelectorAll(\"div\"))\n\t\t.filter((el) => !el.hasChildNodes())\n\t\t.forEach((el) => el.remove());\n}\n\nfunction removeByQuery(string: keyof HTMLElementTagNameMap | string) {\n\tconsole.debug(`\uD83C\uDF73 removing ${string}`);\n\tArray.from(document.querySelectorAll(string)).forEach((el) => el.remove());\n}\n\nfunction generateCssText(css: Partial<CSSStyleDeclaration>) {\n\treturn Object.keys(css)\n\t\t.map((key) => `${kebabize(key)}:${css[key as keyof typeof css]}`)\n\t\t.join(\";\");\n}\n\n/** @see https://stackoverflow.com/a/67243723 */\nfunction kebabize(str: string) {\n\treturn str.replace(\n\t\t/[A-Z]+(?![a-z])|[A-Z]/g,\n\t\t($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase()\n\t);\n}\n\nfunction getRootEl() {\n\treturn getNode(\"body\");\n}\n\nfunction getNode<E extends Element>(selector: string): E {\n\tconst el = document.querySelector<E>(selector);\n\n\tif (el === null) {\n\t\tthrow Error(`\uD83C\uDF73 Unable to find element: ${selector}`);\n\t}\n\n\treturn el;\n}\n\nfunction cloneNode(selector: string) {\n\tconst el = getNode(selector);\n\tconst cloneEl = el.cloneNode(true);\n\n\tconst returnEl = document.createElement(\"section\");\n\treturnEl.append(cloneEl);\n\n\treturn returnEl;\n}\n\nfunction createEl(\n\ttag: keyof HTMLElementTagNameMap,\n\tcss: Partial<CSSStyleDeclaration>,\n\tcontent: string = \"\",\n\tattr: Record<string, string> = {}\n): HTMLElement {\n\tconst el = document.createElement(tag);\n\tel.style.cssText = generateCssText(css);\n\n\tif (content) {\n\t\tel.textContent = content;\n\t}\n\n\tif (attr) {\n\t\tObject.keys(attr).forEach((name) =>\n\t\t\tel.setAttribute(name, attr[name as keyof typeof attr])\n\t\t);\n\t}\n\n\treturn el;\n}\n\nexport function appendRecipe() {\n\t// fetch target elements\n\tconst documentBody = getNode(\"body\");\n\tconst recipe = cloneNode(\".recipe\");\n\t// const { header, body, footer } = getPageEls();\n\n\tconst insertion = createEl(\n\t\t\"section\",\n\t\t{\n\t\t\tpadding: \"1em\",\n\t\t\tposition: \"absolute\",\n\t\t\ttop: \"0\",\n\t\t\tborder: \"1em solid salmon\",\n\t\t\tbackground: \"white\",\n\t\t\tzIndex: \"1000\",\n\t\t},\n\t\tundefined,\n\t\t{ id: \"insert\" }\n\t);\n\n\tconst heading = createEl(\"div\", {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: \"1em\",\n\t});\n\n\tconst h1 = createEl(\"h1\", { margin: \"0\" }, \"Recipe:\");\n\theading.append(h1);\n\n\tconst collapseBtn = createEl(\"button\", { display: \"block\" }, \"-\", {\n\t\tclass: \"toggle-button\",\n\t\tid: \"collapse\",\n\t});\n\theading.append(collapseBtn);\n\n\tconst expandBtn = createEl(\n\t\t\"button\",\n\t\t{\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: \"1em\",\n\t\t\tright: \"1.5em\",\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t\"+\",\n\t\t{ class: \"toggle-button\", id: \"expand\" }\n\t);\n\n\t// button styles\n\tconst style = document.createElement(\"style\");\n\tconst buttonCss: {\n\t\tbase: Partial<CSSStyleDeclaration>;\n\t\thover: Partial<CSSStyleDeclaration>;\n\t} = {\n\t\tbase: {\n\t\t\theight: \"2em\",\n\t\t\twidth: \"2em\",\n\t\t\tborderRadius: \"90px\",\n\t\t\tbackground: \"salmon\",\n\t\t},\n\t\thover: {\n\t\t\tbackgroundColor: \"rgb(250 128 114 / 70%)\",\n\t\t\ttextDecoration: \"none\",\n\t\t},\n\t};\n\tconst buttonCssText = `.toggle-button{ ${generateCssText(buttonCss.base)} }\n\t.toggle-button:hover, .toggle-button:focus{ ${generateCssText(\n\t\tbuttonCss.hover\n\t)} }`;\n\tstyle.appendChild(document.createTextNode(buttonCssText));\n\tdocument.getElementsByTagName(\"head\")[0].appendChild(style);\n\n\t// button logic\n\tfunction handleClick(e: MouseEvent) {\n\t\tconst target = e.target as HTMLButtonElement;\n\t\tconst expandBtn = getNode<HTMLButtonElement>(\"#expand\");\n\t\tconst main = getNode<HTMLElement>(\"#insert\");\n\n\t\tif (target.id === \"collapse\") {\n\t\t\texpandBtn.style.display = \"block\";\n\t\t\tmain.style.display = \"none\";\n\t\t} else {\n\t\t\texpandBtn.style.display = \"none\";\n\t\t\tmain.style.display = \"block\";\n\t\t}\n\t}\n\tcollapseBtn.addEventListener(\"click\", handleClick);\n\texpandBtn.addEventListener(\"click\", handleClick);\n\taddEventListener(\"beforeunload\", () => {\n\t\tcollapseBtn.removeEventListener(\"click\", handleClick);\n\t\texpandBtn.removeEventListener(\"click\", handleClick);\n\t});\n\n\t// DOM mutations\n\tdocumentBody.prepend(insertion);\n\tinsertion.append(heading);\n\tinsertion.append(recipe);\n\tdocumentBody.append(expandBtn);\n}\n\nexport function removeElements() {\n\tconsole.debug(`\uD83C\uDF73 removing nodes`);\n\tremoveEmptyDiv();\n\tremovableQueries.forEach(removeByQuery);\n}\n\nexport function instantiateMutation() {\n\tconst mutationCallback: MutationCallback = (mutations) => {\n\t\tmutations.forEach((mutation) => {\n\t\t\tmutation.addedNodes.forEach((node) => {\n\t\t\t\tif (node instanceof Element) {\n\t\t\t\t\tremovableQueries.forEach((query) => {\n\t\t\t\t\t\tif (node.matches(query) || node.querySelectorAll(query).length) {\n\t\t\t\t\t\t\tconsole.debug(`\uD83C\uDF73 removing ${node.childElementCount} node`);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tnode.remove();\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tconsole.debug(`\uD83C\uDF73 error removing node: `, error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tconst observer = new MutationObserver(mutationCallback);\n\n\tconst mutationTarget = getRootEl();\n\tconst config: MutationObserverInit = { subtree: true, childList: true };\n\tif (mutationTarget) {\n\t\tconsole.debug(`\uD83C\uDF73 instantiating observer`);\n\t\tobserver.observe(mutationTarget, config);\n\t}\n\n\treturn observer;\n}\n", "import { appendRecipe, instantiateMutation, removeElements } from \"./util\";\n\nfunction init() {\n\t// instantiate observers\n\tconst observer = instantiateMutation();\n\n\twindow.onload = function () {\n\t\t// remove troublesome nodes\n\t\tremoveElements();\n\t\t// append recipe to top of doom\n\t\tappendRecipe();\n\t};\n\n\t// clean up\n\taddEventListener(\"beforeunload\", () => {\n\t\tconsole.debug(\"\uD83C\uDF73 disconnecting\");\n\t\tobserver.disconnect();\n\t});\n}\n\ntry {\n\tinit();\n} catch (error) {\n\tconsole.debug(`\uD83C\uDF73 failed \uD83D\uDE22: `, error);\n}\n"],
  "mappings": "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",
  "names": ["removableQueries", "removeEmptyDiv", "el", "removeByQuery", "string", "generateCssText", "css", "key", "kebabize", "str", "$", "ofs", "getRootEl", "getNode", "selector", "cloneNode", "cloneEl", "returnEl", "createEl", "tag", "content", "attr", "name", "appendRecipe", "documentBody", "recipe", "insertion", "heading", "h1", "collapseBtn", "expandBtn", "style", "buttonCss", "buttonCssText", "handleClick", "e", "target", "main", "removeElements", "instantiateMutation", "mutationCallback", "mutations", "mutation", "node", "query", "error", "observer", "mutationTarget", "config", "init", "observer", "instantiateMutation", "removeElements", "appendRecipe", "error"]
}
