{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["const noScrollNodeList = [\"html\", \"body\"].map((sel) =>\n\tdocument.querySelector(sel)\n);\n\nconst observables = [\"#app\", \"main\"].map((sel) => document.querySelector(sel));\n\nconst classNames = [\"noScroll\", \"no-scroll\"];\n\nconst removableElements = [\n\t'[role=\"dialog\"]',\n\t'[class*=\"modal\"]',\n\t\"iframe\",\n\t\"[aria-live]\",\n];\n\nconst config: MutationObserverInit = {\n\tattributes: true,\n\tattributeFilter: [\"class\"],\n};\n\nfunction removeByQuery(string: keyof HTMLElementTagNameMap | string) {\n\tconsole.debug(`\uD83C\uDF73 removing ${string}`);\n\tArray.from(document.querySelectorAll(string)).forEach((el) => el.remove());\n}\n\n/**\n * an empty div is typically some sort of overlay\n */\nfunction removeEmptyDiv() {\n\tconsole.debug(`\uD83C\uDF73 removing empty divs`);\n\tArray.from(document.querySelectorAll(\"div\"))\n\t\t.filter((el) => !el.hasChildNodes())\n\t\t.forEach((el) => el.remove());\n}\n\nfunction overrideFixedPosition() {\n\tlet selectors: string[] = [];\n\n\tArray.from(document.styleSheets).forEach((styleSheet) => {\n\t\ttry {\n\t\t\treturn Array.from(styleSheet.cssRules).forEach(({ cssText }) => {\n\t\t\t\tif (/position: fixed/.test(cssText)) {\n\t\t\t\t\tselectors = selectors.concat(cssText.match(/\\..+?\\s/g) ?? []);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} catch (e) {}\n\t});\n\n\tconsole.debug(`\uD83C\uDF73 inlining styles for ${selectors.length} elements`);\n\n\tselectors.forEach((sel) => {\n\t\ttry {\n\t\t\tdocument.querySelector(sel)?.setAttribute(\"style\", \"position: relative;\");\n\t\t} catch (error) {}\n\t});\n}\n\nfunction removeNoScrollClass(node: Element) {\n\tArray.from(node.classList)\n\t\t.filter((cl) => classNames.some((c) => cl.includes(c)))\n\t\t.forEach((cl) => node.classList.remove(cl));\n}\n\nfunction removeElements() {\n\tremovableElements.forEach(removeByQuery);\n\tremoveEmptyDiv();\n\toverrideFixedPosition();\n}\n\nfunction init() {\n\twindow.onload = function () {\n\t\tremoveElements();\n\t\tclassNames\n\t\t\t.map((cl) => document.querySelectorAll(`[class*=\"${cl}\"]`))\n\t\t\t.map((nodeList) => Array.from(nodeList))\n\t\t\t.flat()\n\t\t\t.forEach(removeNoScrollClass);\n\t};\n\n\tconst observer = new MutationObserver((mutationsList) => {\n\t\tmutationsList.forEach((mutation) =>\n\t\t\tremoveNoScrollClass(mutation.target as HTMLElement)\n\t\t);\n\t\tremoveElements();\n\t});\n\n\t[...noScrollNodeList, ...observables].forEach((el) => {\n\t\tif (el) observer.observe(el, config);\n\t});\n}\n\ninit();\n"],
  "mappings": "mBAAA,IAAMA,EAAmB,CAAC,OAAQ,MAAM,EAAE,IAAKC,GAC9C,SAAS,cAAcA,CAAG,CAC3B,EAEMC,EAAc,CAAC,OAAQ,MAAM,EAAE,IAAKD,GAAQ,SAAS,cAAcA,CAAG,CAAC,EAEvEE,EAAa,CAAC,WAAY,WAAW,EAErCC,EAAoB,CACzB,kBACA,mBACA,SACA,aACD,EAEMC,EAA+B,CACpC,WAAY,GACZ,gBAAiB,CAAC,OAAO,CAC1B,EAEA,SAASC,EAAcC,EAA8C,CACpE,QAAQ,MAAM,sBAAeA,CAAM,EAAE,EACrC,MAAM,KAAK,SAAS,iBAAiBA,CAAM,CAAC,EAAE,QAASC,GAAOA,EAAG,OAAO,CAAC,CAC1E,CAKA,SAASC,GAAiB,CACzB,QAAQ,MAAM,+BAAwB,EACtC,MAAM,KAAK,SAAS,iBAAiB,KAAK,CAAC,EACzC,OAAQD,GAAO,CAACA,EAAG,cAAc,CAAC,EAClC,QAASA,GAAOA,EAAG,OAAO,CAAC,CAC9B,CAEA,SAASE,GAAwB,CAChC,IAAIC,EAAsB,CAAC,EAE3B,MAAM,KAAK,SAAS,WAAW,EAAE,QAASC,GAAe,CACxD,GAAI,CACH,OAAO,MAAM,KAAKA,EAAW,QAAQ,EAAE,QAAQ,CAAC,CAAE,QAAAC,CAAQ,KACrD,kBAAkB,KAAKA,CAAO,IACjCF,EAAYA,EAAU,OAAOE,EAAQ,MAAM,UAAU,GAAK,CAAC,CAAC,GAEtD,GACP,CACF,MAAY,CAAC,CACd,CAAC,EAED,QAAQ,MAAM,iCAA0BF,EAAU,MAAM,WAAW,EAEnEA,EAAU,QAASV,GAAQ,CAC1B,GAAI,CACH,SAAS,cAAcA,CAAG,GAAG,aAAa,QAAS,qBAAqB,CACzE,MAAgB,CAAC,CAClB,CAAC,CACF,CAEA,SAASa,EAAoBC,EAAe,CAC3C,MAAM,KAAKA,EAAK,SAAS,EACvB,OAAQC,GAAOb,EAAW,KAAMc,GAAMD,EAAG,SAASC,CAAC,CAAC,CAAC,EACrD,QAASD,GAAOD,EAAK,UAAU,OAAOC,CAAE,CAAC,CAC5C,CAEA,SAASE,GAAiB,CACzBd,EAAkB,QAAQE,CAAa,EACvCG,EAAe,EACfC,EAAsB,CACvB,CAEA,SAASS,GAAO,CACf,OAAO,OAAS,UAAY,CAC3BD,EAAe,EACff,EACE,IAAKa,GAAO,SAAS,iBAAiB,YAAYA,CAAE,IAAI,CAAC,EACzD,IAAKI,GAAa,MAAM,KAAKA,CAAQ,CAAC,EACtC,KAAK,EACL,QAAQN,CAAmB,CAC9B,EAEA,IAAMO,EAAW,IAAI,iBAAkBC,GAAkB,CACxDA,EAAc,QAASC,GACtBT,EAAoBS,EAAS,MAAqB,CACnD,EACAL,EAAe,CAChB,CAAC,EAED,CAAC,GAAGlB,EAAkB,GAAGE,CAAW,EAAE,QAASM,GAAO,CACjDA,GAAIa,EAAS,QAAQb,EAAIH,CAAM,CACpC,CAAC,CACF,CAEAc,EAAK",
  "names": ["noScrollNodeList", "sel", "observables", "classNames", "removableElements", "config", "removeByQuery", "string", "el", "removeEmptyDiv", "overrideFixedPosition", "selectors", "styleSheet", "cssText", "removeNoScrollClass", "node", "cl", "c", "removeElements", "init", "nodeList", "observer", "mutationsList", "mutation"]
}
